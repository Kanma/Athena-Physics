/**	@file	module.cpp
	@author	Philip Abbet

    Module-wide declarations and functions of the Athena-Physics module.

    This file is auto-generated by the CMake build system.
*/

#include <Athena-Physics/Prerequisites.h>
#include <Athena-Physics/Body.h>
#include <Athena-Physics/CollisionObject.h>
#include <Athena-Physics/CollisionShape.h>
#include <Athena-Physics/CompoundShape.h>
#include <Athena-Physics/GhostObject.h>
#include <Athena-Physics/PhysicalComponent.h>
#include <Athena-Physics/PrimitiveShape.h>
#include <Athena-Physics/StaticTriMeshShape.h>
#include <Athena-Physics/World.h>
#include <Athena-Entities/ComponentsManager.h>

using namespace Athena::Entities;


namespace Athena {
namespace Physics {

    const char* VERSION = "@ATHENA_PHYSICS_VERSION_MAJOR@.@ATHENA_PHYSICS_VERSION_MINOR@.@ATHENA_PHYSICS_VERSION_PATCH@@ATHENA_PHYSICS_VERSION_SUFFIX@";


    void initialize()
    {
        assert(ComponentsManager::getSingletonPtr());

        ComponentsManager* pComponentsManager = ComponentsManager::getSingletonPtr();

        pComponentsManager->registerType<Body>();
        pComponentsManager->registerType<CollisionObject>();
        pComponentsManager->registerType<CollisionShape>();
        pComponentsManager->registerType<CompoundShape>();
        pComponentsManager->registerType<GhostObject>();
        pComponentsManager->registerType<PhysicalComponent>();
        pComponentsManager->registerType<PrimitiveShape>();
        pComponentsManager->registerType<StaticTriMeshShape>();
        pComponentsManager->registerType<World>();
    }

}
}
